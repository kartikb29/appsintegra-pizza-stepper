{"version":3,"sources":["actions/setSettings.js","components/Settings.js","actions/setSlices.js","components/Flavour.js","components/Person.js","components/PersonList.js","components/OrderInfo.js","components/PizzaStepper.js","App.js","reducers/settingsReducer.js","reducers/slicesReducer.js","reducers/rootReducer.js","index.js"],"names":["data","type","payload","Settings","setPeople","e","setState","numberOfPeople","target","value","setSlices","slices","numberOfSlices","setFlavours","numberOfFlavours","setFlavourRequests","numberOfFlavourRequests","storeSettings","preventDefault","state","props","setSettings","Container","Form","onSubmit","this","Control","id","onChange","placeholder","Button","variant","Component","connect","settings","dispatch","bindActionCreators","operation","personIndex","flavourIndex","Flavour","incrementSlice","sliceCountByPerson","sliceStore","sliceData","sliceByPerson","personSliceCount","slice","Number","decrementSlice","className","onClick","Person","getFlavour","i","key","flavourList","push","PersonList","getPerson","personList","OrderInfo","flavourSliceCount","slicePerPizza","map","index","Math","ceil","totalSlices","PizzaStepper","handleNext","activeStep","handleBack","handleReset","getStep","Typography","Stepper","Step","StepLabel","active","disabled","color","App","initSettings","initState","Array","fill","rootreducer","combineReducers","action","Object","assign","blankState","newState","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ed4b998.chunk.js","sourcesContent":["export default (data) => {\n  return {\n    type: 'setSettings',\n    payload: {\n      data\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport setSettings from '../actions/setSettings'\nimport { bindActionCreators } from 'redux'\n\nimport { Button , Form , Container } from 'react-bootstrap';\n\n\n\nclass Settings extends Component {\n  constructor () {\n    super()\n    this.state = {\n      numberOfPeople: 0,\n      numberOfSlices: 0,\n      numberOfFlavours: 0,\n      numberOfFlavourRequests: 0\n    }\n  }\n\n  setPeople = (e) => {\n    this.setState({\n      numberOfPeople: e.target.value\n    })\n  }\n\n  setSlices = (e) => {\n    let slices = e.target.value\n    if (slices > 18) { slices = 18 }\n    // if (slices < 6) { slices = 6 }\n    this.setState({\n      numberOfSlices: slices\n    })\n  }\n\n  setFlavours = (e) => {\n    this.setState({\n      numberOfFlavours: e.target.value\n    })\n  }\n\n  setFlavourRequests = (e) => {\n    this.setState({\n      numberOfFlavourRequests: e.target.value\n    })\n  }\n\n  storeSettings = (e) => {\n    e.preventDefault()\n    const data = this.state\n    this.props.setSettings(data)\n  }\n\n  render () {\n    return (\n      <Container>\n        <h3>Settings</h3>\n        <p></p>\n        <Form onSubmit={this.storeSettings}>\n          <Form.Control id=\"filled-basic\" onChange={this.setPeople} type=\"number\" placeholder=\"Enter number of people\" />\n          <Form.Control onChange={this.setSlices} type=\"number\" placeholder=\"Enter number of slices in a pizza\" />\n          <Form.Control onChange={this.setFlavours} type=\"number\" placeholder=\"Enter number of flavours\" />\n          <Form.Control onChange={this.setFlavourRequests} type=\"number\" placeholder=\"Enter maximum slice/person/flavour\" />\n          <p></p>\n          <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Form>\n        <p></p>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    setSettings: setSettings\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","export default (operation, personIndex, flavourIndex) => {\n  return {\n    type: 'setSlices',\n    payload: {\n      operation,\n      personIndex,\n      flavourIndex\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport setSettings from '../actions/setSettings'\nimport setSlices from '../actions/setSlices'\nimport { bindActionCreators } from 'redux'\n\nclass Flavour extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  incrementSlice = (personIndex, flavourIndex) => {\n    const sliceCountByPerson = this.props.sliceStore.sliceData[personIndex][flavourIndex]\n    const sliceByPerson = this.props.sliceStore.personSliceCount.slice(0, Number(personIndex) + 1)\n    if ((sliceCountByPerson < this.props.settings.numberOfFlavourRequests) && sliceByPerson[personIndex] < 4) {\n      const operation = '+'\n      this.props.setSlices(operation, personIndex, flavourIndex)\n    }\n  }\n\n  decrementSlice = (personIndex, flavourIndex) => {\n    const operation = '-'\n    this.props.setSlices(operation, personIndex, flavourIndex)\n  }\n\n  render () {\n    const flavourIndex = this.props.flavourIndex\n    const personIndex = this.props.personIndex\n    return (\n      <div className=\"col-sm-2\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Flavour {flavourIndex}</h5>\n            <h6 className=\"card-text\">Slices: {this.props.sliceStore.sliceData[personIndex][flavourIndex]}</h6>\n            <p></p>\n            <input className=\"btn btn-primary\" type=\"button\" value=\"+\" onClick={() => { this.incrementSlice(personIndex, flavourIndex) }} />\n            <span> </span>\n            <input className=\"btn btn-secondary\" type=\"button\" value=\"-\" onClick={() => { this.decrementSlice(personIndex, flavourIndex) }}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings,\n    sliceStore: state.sliceStore\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    setSettings: setSettings,\n    setSlices: setSlices\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Flavour)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Flavour from './Flavour'\n\nclass Person extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  getFlavour = (i) => {\n    return <Flavour key={i} flavourIndex={i} personIndex={this.props.personIndex} />\n  }\n\n  render () {\n    const flavourList = []\n    for (let i = 1; i <= Number(this.props.settings.numberOfFlavours); i++) {\n      flavourList.push(this.getFlavour(i))\n    }\n    return (\n      <li className=\"list-group-item list-group-item-light\">\n        <h5>Person: {this.props.personIndex}</h5>\n        <div className=\"row\">\n          {flavourList}\n        </div>\n        <p></p>\n      </li>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings\n  }\n}\n\nexport default connect(mapStateToProps)(Person)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Person from './Person'\n\nclass PersonList extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  getPerson = (i) => {\n    return <Person key={i} personIndex={i} />\n  }\n\n  render () {\n    const personList = []\n    for (let i = 1; i <= Number(this.props.settings.numberOfPeople); i++) {\n      personList.push(this.getPerson(i))\n    }\n    return (\n      <div className=\"container\">\n        <h3>People Requests</h3>\n        <ul className=\"list-group\">\n          {personList}\n        </ul>\n        <p></p>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings\n  }\n}\n\nexport default connect(mapStateToProps)(PersonList)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass OrderInfo extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  render () {\n    const numberOfFlavours = Number(this.props.settings.numberOfFlavours) + 1\n    const flavourSliceCount = (this.props.sliceStore.flavourSliceCount).slice(1, numberOfFlavours)\n    const slicePerPizza = Number(this.props.settings.numberOfSlices)\n    const flavourList = flavourSliceCount.map((data, index) => {\n      const value = Math.ceil(data / slicePerPizza)\n      return (\n        <li className=\"list-group-item\" key={index} >Flavour {index + 1}: {value}</li>\n      )\n    })\n    const totalSlices = this.props.sliceStore.totalSlices\n    return (\n      <div className=\"container\">\n        <h3>Order Info</h3>\n        <h5 className=\"container\">Total Slices: {totalSlices}</h5>\n        <p></p>\n        <div className=\"container\">\n          <ul className=\"list-group\">\n            {flavourList}\n          </ul>\n        </div>\n        <p></p>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings,\n    sliceStore: state.sliceStore\n  }\n}\n\nexport default connect(mapStateToProps)(OrderInfo)\n","import React, { Component } from 'react'\nimport Settings from './Settings'\nimport PersonList from './PersonList'\nimport OrderInfo from './OrderInfo'\nimport { connect } from 'react-redux'\nimport setSettings from '../actions/setSettings'\nimport setSlices from '../actions/setSlices'\nimport { bindActionCreators } from 'redux'\n\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\n\nclass PizzaStepper extends Component {\n  constructor () {\n    super()\n    this.state = {\n      activeStep: 0\n    }\n  }\n\n  handleNext = () => {\n    const { activeStep } = this.state\n    if (activeStep <= 2) {\n      this.setState({\n        activeStep: activeStep + 1\n      })\n    }\n  };\n\n  handleBack = () => {\n    const { activeStep } = this.state\n    if (activeStep > 0) {\n      this.setState({\n        activeStep: activeStep - 1\n      })\n    }\n  };\n\n  handleReset = () => {\n    const settings = {\n      numberOfPeople: 0,\n      numberOfSlices: 0,\n      numberOfFlavours: 0,\n      numberOfFlavourRequests: 0\n    }\n    this.props.setSettings(settings)\n    this.props.setSlices('r')\n    this.setState({\n      activeStep: 0\n    })\n  };\n\n  getStep = () => {\n    const { activeStep } = this.state\n    if (activeStep === 0) {\n      return <Settings />\n    } else if (activeStep === 1) {\n      return <PersonList />\n    } else if (activeStep === 2) {\n      return <OrderInfo />\n    } else {\n      return <Typography>Thank You</Typography>\n    }\n  }\n\n  render () {\n    const { activeStep } = this.state\n    return (\n      <Container>\n        <Stepper activeStep={activeStep}>\n          <Step key={0}>\n            <StepLabel>Settings</StepLabel>\n          </Step>\n          <Step key={1} active={true}>\n            <StepLabel>Order</StepLabel>\n          </Step>\n          <Step key={2}>\n            <StepLabel>Order Summary</StepLabel>\n          </Step>\n        </Stepper>\n        <Container>\n          {this.getStep()}\n        </Container>\n        <div>\n          <Button\n            disabled={activeStep === 0}\n            onClick={this.handleReset}\n            variant=\"outlined\"\n            color=\"primary\"\n          >Reset</Button>\n          <span> </span>\n          <Button\n            disabled={activeStep === 0}\n            onClick={this.handleBack}\n            variant=\"contained\"\n          >Back</Button>\n          <span> </span>\n          <Button\n            onClick={this.handleNext}\n            variant=\"contained\"\n            color=\"primary\"\n          >Next</Button>\n        </div>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings,\n    sliceStore: state.sliceStore\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    setSettings: setSettings,\n    setSlices: setSlices\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaStepper)\n","import React, { Component } from 'react'\nimport './App.css'\nimport PizzaStepper from './components/PizzaStepper'\nimport { connect } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <PizzaStepper>\n        </PizzaStepper>\n      </div>\n    )\n  };\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings,\n    sliceStore: state.sliceStore\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","const initSettings =\n  {\n    numberOfPeople: 0,\n    numberOfSlices: 0,\n    numberOfFlavours: 0,\n    numberOfFlavourRequests: 0\n  }\n\nexport default (state = initSettings, action) => {\n  if (action.type === 'setSettings') {\n    let newState = Object.assign(state)\n    newState = action.payload.data\n    return newState\n  } else {\n    return state\n  }\n}\n","const initState = {\n  sliceData: new Array(100).fill(null).map(() => Array(100).fill(0)),\n  totalSlices: 0,\n  flavourSliceCount: new Array(100).fill(0),\n  personSliceCount: new Array(100).fill(0)\n}\n\nexport default (state = initState, action) => {\n  const blankState = {\n    sliceData: new Array(100).fill(null).map(() => Array(100).fill(0)),\n    totalSlices: 0,\n    flavourSliceCount: new Array(100).fill(0),\n    personSliceCount: new Array(100).fill(0)\n  }\n  if (action.type === 'setSlices') {\n    let newState = Object.assign({}, state)\n    const personIndex = Number(action.payload.personIndex)\n    const flavourIndex = Number(action.payload.flavourIndex)\n    if (action.payload.operation === '+') {\n      newState.sliceData[personIndex][flavourIndex]++\n      newState.totalSlices++\n      newState.flavourSliceCount[flavourIndex]++\n      newState.personSliceCount[personIndex]++\n    } else if (action.payload.operation === '-') {\n      if (newState.sliceData[personIndex][flavourIndex] > 0) {\n        newState.sliceData[personIndex][flavourIndex]--\n        newState.totalSlices--\n        newState.flavourSliceCount[flavourIndex]--\n        newState.personSliceCount[personIndex]--\n      }\n    } else if (action.payload.operation === 'r') {\n      newState = Object.assign({}, blankState)\n    }\n    return newState\n  } else {\n    return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport settingsReducer from './settingsReducer'\nimport slicesReducer from './slicesReducer'\n\nconst rootreducer = combineReducers({\n  settings: settingsReducer,\n  sliceStore: slicesReducer\n})\n\nexport default rootreducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'))\n"],"sourceRoot":""}