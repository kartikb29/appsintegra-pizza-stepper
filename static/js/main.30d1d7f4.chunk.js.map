{"version":3,"sources":["actions/setSettings.js","components/Settings.js","actions/setSlices.js","components/Flavour.js","components/Person.js","components/PersonList.js","components/OrderInfo.js","components/PizzaStepper.js","App.js","reducers/settingsReducer.js","reducers/slicesReducer.js","reducers/rootReducer.js","index.js"],"names":["data","type","payload","Settings","setPeople","e","setState","numberOfPeople","target","value","setSlices","slices","numberOfSlices","setFlavours","numberOfFlavours","setFlavourRequests","numberOfFlavourRequests","storeSettings","preventDefault","state","props","setSettings","settings","this","Container","Form","onSubmit","Group","as","Row","Label","column","sm","Col","Control","onChange","defaultValue","placeholder","Button","variant","Component","connect","dispatch","bindActionCreators","operation","personIndex","flavourIndex","Flavour","incrementSlice","sliceCountByPerson","sliceStore","sliceData","sliceByPerson","personSliceCount","slice","Number","decrementSlice","className","Card","bg","Body","Title","Text","onClick","Person","getFlavour","i","key","flavourList","push","Header","PersonList","getPerson","personList","OrderInfo","flavourSliceCount","slicePerPizza","map","index","Math","ceil","totalSlices","PizzaStepper","handleNext","activeStep","handleBack","handleReset","getStep","Typography","Stepper","Step","StepLabel","active","disabled","color","App","initSettings","initState","Array","fill","rootreducer","combineReducers","action","Object","assign","blankState","newState","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30d1d7f4.chunk.js","sourcesContent":["export default (data) => {\n  return {\n    type: 'setSettings',\n    payload: {\n      data\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport setSettings from '../actions/setSettings'\nimport { bindActionCreators } from 'redux'\n\nimport { Button, Form, Row, Col, Container } from 'react-bootstrap'\n\nclass Settings extends Component {\n  constructor () {\n    super()\n    this.state = {\n      numberOfPeople: 0,\n      numberOfSlices: 0,\n      numberOfFlavours: 0,\n      numberOfFlavourRequests: 0\n    }\n  }\n\n  setPeople = (e) => {\n    this.setState({\n      numberOfPeople: e.target.value\n    })\n  }\n\n  setSlices = (e) => {\n    let slices = e.target.value\n    if (slices > 18) { slices = 18 }\n    // if (slices < 6) { slices = 6 }\n    this.setState({\n      numberOfSlices: slices\n    })\n  }\n\n  setFlavours = (e) => {\n    this.setState({\n      numberOfFlavours: e.target.value\n    })\n  }\n\n  setFlavourRequests = (e) => {\n    this.setState({\n      numberOfFlavourRequests: e.target.value\n    })\n  }\n\n  storeSettings = (e) => {\n    e.preventDefault()\n    const data = this.state\n    this.props.setSettings(data)\n  }\n\n  render () {\n    const settings = this.props.settings\n    return (\n      <Container>\n        <h3>Settings</h3>\n        <p></p>\n        <Form onSubmit={this.storeSettings}>\n          <Form.Group as={Row}>\n            <Form.Label column sm={3}>Number of people :</Form.Label>\n            <Col sm={9}>\n              <Form.Control onChange={this.setPeople} defaultValue={settings.numberOfPeople} type=\"number\" placeholder=\"Enter number of people\" />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={3}>Number of slices in a pizza:</Form.Label>\n            <Col sm={9}>\n              <Form.Control onChange={this.setSlices} defaultValue={settings.numberOfSlices} type=\"number\" placeholder=\"Enter number of slices in a pizza\" />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={3}>Number of flavours:</Form.Label>\n            <Col sm={9}>\n              <Form.Control onChange={this.setFlavours} defaultValue={settings.numberOfFlavours} type=\"number\" placeholder=\"Enter number of flavours\" />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={3}>Maximum slice/person/flavour:</Form.Label>\n            <Col sm={9}>\n              <Form.Control onChange={this.setFlavourRequests} defaultValue={settings.numberOfFlavourRequests} type=\"number\" placeholder=\"Enter maximum slice/person/flavour\" />\n            </Col>\n          </Form.Group>\n          <p></p>\n          <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Form>\n        <p></p>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    setSettings: setSettings\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n","export default (operation, personIndex, flavourIndex) => {\n  return {\n    type: 'setSlices',\n    payload: {\n      operation,\n      personIndex,\n      flavourIndex\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport setSettings from '../actions/setSettings'\nimport setSlices from '../actions/setSlices'\nimport { bindActionCreators } from 'redux'\n\nimport { Card } from 'react-bootstrap'\n\nclass Flavour extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  incrementSlice = (personIndex, flavourIndex) => {\n    const sliceCountByPerson = this.props.sliceStore.sliceData[personIndex][flavourIndex]\n    const sliceByPerson = this.props.sliceStore.personSliceCount.slice(0, Number(personIndex) + 1)\n    if ((sliceCountByPerson < this.props.settings.numberOfFlavourRequests) && sliceByPerson[personIndex] < 4) {\n      const operation = '+'\n      this.props.setSlices(operation, personIndex, flavourIndex)\n    }\n  }\n\n  decrementSlice = (personIndex, flavourIndex) => {\n    const operation = '-'\n    this.props.setSlices(operation, personIndex, flavourIndex)\n  }\n\n  render () {\n    const flavourIndex = this.props.flavourIndex\n    const personIndex = this.props.personIndex\n    return (\n      <div className=\"col-sm-2\">\n        <Card bg=\"light\">\n          <Card.Body>\n            <Card.Title>Flavour {flavourIndex}</Card.Title>\n            <Card.Text>Slices: {this.props.sliceStore.sliceData[personIndex][flavourIndex]}</Card.Text>\n            <p></p>\n            <input className=\"btn btn-primary\" type=\"button\" value=\"+\" onClick={() => { this.incrementSlice(personIndex, flavourIndex) }} />\n            <span>  </span>\n            <input className=\"btn btn-secondary\" type=\"button\" value=\"-\" onClick={() => { this.decrementSlice(personIndex, flavourIndex) }}/>\n          </Card.Body>\n        </Card>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings,\n    sliceStore: state.sliceStore\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    setSettings: setSettings,\n    setSlices: setSlices\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Flavour)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Flavour from './Flavour'\n\nimport { Card } from 'react-bootstrap'\n\nclass Person extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  getFlavour = (i) => {\n    return <Flavour key={i} flavourIndex={i} personIndex={this.props.personIndex} />\n  }\n\n  render () {\n    const flavourList = []\n    for (let i = 1; i <= Number(this.props.settings.numberOfFlavours); i++) {\n      flavourList.push(this.getFlavour(i))\n    }\n    return (\n      <div>\n        <Card>\n          <Card.Header as=\"h5\">Person: {this.props.personIndex}</Card.Header>\n          <Card.Body>\n            <div className=\"row justify-content-center\">\n              {flavourList}\n            </div>\n          </Card.Body>\n        </Card>\n        <p></p>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings\n  }\n}\n\nexport default connect(mapStateToProps)(Person)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Person from './Person'\n\nclass PersonList extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  getPerson = (i) => {\n    return <Person key={i} personIndex={i} />\n  }\n\n  render () {\n    const personList = []\n    for (let i = 1; i <= Number(this.props.settings.numberOfPeople); i++) {\n      personList.push(this.getPerson(i))\n    }\n    return (\n      <div className=\"container\">\n        <h3>Order Details</h3>\n        {personList}\n        <p></p>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings\n  }\n}\n\nexport default connect(mapStateToProps)(PersonList)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Card } from 'react-bootstrap'\n\nclass OrderInfo extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  render () {\n    const numberOfFlavours = Number(this.props.settings.numberOfFlavours) + 1\n    const flavourSliceCount = (this.props.sliceStore.flavourSliceCount).slice(1, numberOfFlavours)\n    const slicePerPizza = Number(this.props.settings.numberOfSlices)\n    const flavourList = flavourSliceCount.map((data, index) => {\n      const value = Math.ceil(data / slicePerPizza)\n      return (\n        <div className=\"col-sm-2\" key={index}>\n          <Card bg=\"light\">\n            <Card.Header as=\"h5\">Flavour {index + 1}</Card.Header>\n            <Card.Title>{value}</Card.Title>\n          </Card>\n          <p></p>\n        </div>\n      )\n    })\n    const totalSlices = this.props.sliceStore.totalSlices\n    return (\n      <div>\n        <h3>Order Info</h3>\n        <Card>\n          <Card.Header as=\"h5\">Total Slices: {totalSlices}</Card.Header>\n          <p></p>\n          <div className=\"row justify-content-center\">\n            {flavourList}\n          </div>\n          <p></p>\n        </Card>\n        <p></p>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings,\n    sliceStore: state.sliceStore\n  }\n}\n\nexport default connect(mapStateToProps)(OrderInfo)\n","import React, { Component } from 'react'\nimport Settings from './Settings'\nimport PersonList from './PersonList'\nimport OrderInfo from './OrderInfo'\nimport { connect } from 'react-redux'\nimport setSettings from '../actions/setSettings'\nimport setSlices from '../actions/setSlices'\nimport { bindActionCreators } from 'redux'\n\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\n\nclass PizzaStepper extends Component {\n  constructor () {\n    super()\n    this.state = {\n      activeStep: 0\n    }\n  }\n\n  handleNext = () => {\n    const { activeStep } = this.state\n    if (activeStep <= 2) {\n      this.setState({\n        activeStep: activeStep + 1\n      })\n    }\n  };\n\n  handleBack = () => {\n    const { activeStep } = this.state\n    if (activeStep > 0) {\n      this.setState({\n        activeStep: activeStep - 1\n      })\n    }\n  };\n\n  handleReset = () => {\n    const settings = {\n      numberOfPeople: 0,\n      numberOfSlices: 0,\n      numberOfFlavours: 0,\n      numberOfFlavourRequests: 0\n    }\n    this.props.setSettings(settings)\n    this.props.setSlices('r')\n    this.setState({\n      activeStep: 0\n    })\n  };\n\n  getStep = () => {\n    const { activeStep } = this.state\n    if (activeStep === 0) {\n      return <Settings />\n    } else if (activeStep === 1) {\n      return <PersonList />\n    } else if (activeStep === 2) {\n      return <OrderInfo />\n    } else {\n      return <Typography>Thank You</Typography>\n    }\n  }\n\n  render () {\n    const { activeStep } = this.state\n    return (\n      <Container>\n        <Stepper activeStep={activeStep}>\n          <Step key={0}>\n            <StepLabel>Settings</StepLabel>\n          </Step>\n          <Step key={1} active={true}>\n            <StepLabel>Order</StepLabel>\n          </Step>\n          <Step key={2}>\n            <StepLabel>Order Summary</StepLabel>\n          </Step>\n        </Stepper>\n        <div>\n          {this.getStep()}\n        </div>\n        <div>\n          <Button\n            disabled={activeStep === 0}\n            onClick={this.handleReset}\n            variant=\"outlined\"\n            color=\"primary\"\n          >Reset</Button>\n          <span> </span>\n          <Button\n            disabled={activeStep === 0}\n            onClick={this.handleBack}\n            variant=\"contained\"\n          >Back</Button>\n          <span> </span>\n          <Button\n            onClick={this.handleNext}\n            variant=\"contained\"\n            color=\"primary\"\n          >Next</Button>\n        </div>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings,\n    sliceStore: state.sliceStore\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    setSettings: setSettings,\n    setSlices: setSlices\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaStepper)\n","import React, { Component } from 'react'\nimport './App.css'\nimport PizzaStepper from './components/PizzaStepper'\nimport { connect } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <PizzaStepper>\n        </PizzaStepper>\n        <p></p>\n      </div>\n    )\n  };\n}\n\nfunction mapStateToProps (state) {\n  return {\n    settings: state.settings,\n    sliceStore: state.sliceStore\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","const initSettings =\n  {\n    numberOfPeople: 0,\n    numberOfSlices: 0,\n    numberOfFlavours: 0,\n    numberOfFlavourRequests: 0\n  }\n\nexport default (state = initSettings, action) => {\n  if (action.type === 'setSettings') {\n    let newState = Object.assign(state)\n    newState = action.payload.data\n    return newState\n  } else {\n    return state\n  }\n}\n","const initState = {\n  sliceData: new Array(100).fill(null).map(() => Array(100).fill(0)),\n  totalSlices: 0,\n  flavourSliceCount: new Array(100).fill(0),\n  personSliceCount: new Array(100).fill(0)\n}\n\nexport default (state = initState, action) => {\n  const blankState = {\n    sliceData: new Array(100).fill(null).map(() => Array(100).fill(0)),\n    totalSlices: 0,\n    flavourSliceCount: new Array(100).fill(0),\n    personSliceCount: new Array(100).fill(0)\n  }\n  if (action.type === 'setSlices') {\n    let newState = Object.assign({}, state)\n    const personIndex = Number(action.payload.personIndex)\n    const flavourIndex = Number(action.payload.flavourIndex)\n    if (action.payload.operation === '+') {\n      newState.sliceData[personIndex][flavourIndex]++\n      newState.totalSlices++\n      newState.flavourSliceCount[flavourIndex]++\n      newState.personSliceCount[personIndex]++\n    } else if (action.payload.operation === '-') {\n      if (newState.sliceData[personIndex][flavourIndex] > 0) {\n        newState.sliceData[personIndex][flavourIndex]--\n        newState.totalSlices--\n        newState.flavourSliceCount[flavourIndex]--\n        newState.personSliceCount[personIndex]--\n      }\n    } else if (action.payload.operation === 'r') {\n      newState = Object.assign({}, blankState)\n    }\n    return newState\n  } else {\n    return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport settingsReducer from './settingsReducer'\nimport slicesReducer from './slicesReducer'\n\nconst rootreducer = combineReducers({\n  settings: settingsReducer,\n  sliceStore: slicesReducer\n})\n\nexport default rootreducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'))\n"],"sourceRoot":""}